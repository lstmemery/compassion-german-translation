---
title: "Descriptive Statistics and Internal Consistency"
format: html
editor: visual
---

## Quarto

```{r}
library(tidyverse)
library(haven)
library(feather)
library(psych)
```

```{r}
german_df <- read_sav("../data/Compassion-DE_19 November 2023_19.42.sav")
```

```{r}
filtered_german_df <- german_df %>% 
  filter(SOCS_O_10 == 4) %>% 
  filter(CEAS_TO1_4 == 10) %>% 
  filter(SCS_19 == 1) %>%
  filter(FFMQ_21 == 4)

filtered_german_df
```

```{r}
ecr_anxiety_items <-c(1, 2, 5, 8, 10, 11)
ecr_avoidance_items <- c(3, 4, 6, 7, 9, 12)
scs_negative_items <- c(1, 8, 11, 16, 21, 2, 6, 20, 24, 4, 13, 18, 25)
scs_positive_items <- c(3, 7, 10, 15, 5, 12, 19, 23, 26, 9, 14, 17, 22)
socs_recognizing_suffering_items <- c(1, 6, 11, 16)
socs_universality_of_suffering_items <- c(2, 7, 12, 17)
socs_feeling_of_suffering_items <- c(3, 8, 13, 18)
socs_tolerating_discomfort_items <- c(4, 9, 14, 19)
socs_alleviate_suffering_items <- c(5, 10, 15, 20)

```

```{r}
tidy_german_df <- filtered_german_df %>% 
  select(
    ResponseId, 
    matches("^(SOCS)|(WEMWBS)|(CEAS)|(PHQ)|(SCS)|(IRI)|(FFMQ)|(PSS)|(ECR)")
    ) %>% 
  mutate(across(-ResponseId, as.numeric)) %>% 
  pivot_longer(-ResponseId) %>% 
  mutate(
    scale = str_split_i(name, '_', 1),
    subscale = str_extract(name, '_([:alnum:]+)_', group=1),
    item_number = as.numeric(str_split_i(name, '_', -1))
  ) %>% 
  filter(!name %in% c("SOCS_O_10", "CEAS_TO1_4", "SCS_19", "FFMQ_21")) %>% 
  mutate(item_number = case_when(
    scale == "SOCS" & subscale == "O" & item_number > 10 ~ item_number - 1,
    scale == "CEAS" & subscale == "TO1" & item_number > 4 ~ item_number - 1,
    scale == "SCS" & item_number > 19 ~ item_number - 1,
    scale == "FFMQ" & item_number > 21 ~ item_number - 1,
    TRUE ~ item_number
  )) %>% 
  mutate(name = if_else(
    is.na(subscale), 
    str_c(scale, item_number, sep = "_"),
    str_c(scale, subscale, item_number, sep = "_")
    )) %>% 
  mutate(
    scale = case_when(
      scale == "SOCS" ~ str_c(scale, subscale, sep = "_"),
      scale == "CEAS" ~ str_c(scale, str_extract(subscale, "[A-Z]+"), sep = "_"),
      scale == "ECR" & item_number %in% ecr_anxiety_items ~ "ECR_Anxiety",
      scale == "ECR" & item_number %in% ecr_avoidance_items ~ "ECR_Avoidance",
      scale == "SCS" & item_number %in% scs_negative ~ "SCS_Negative",
      scale == "SCS" & item_number %in% scs_positive ~ "SCS_Positive",
      TRUE~ scale
    ),
    subscale = case_when(
      str_detect(scale, "^SOCS") & item_number %in% socs_recognizing_suffering_items ~ "Recognizing_Suffering",
      str_detect(scale, "^SOCS") & item_number %in% socs_universality_of_suffering_items ~ "Universality_of_Suffering",
      str_detect(scale, "^SOCS") & item_number %in% socs_feeling_of_suffering_items ~ "Feeling_of_Suffering",
      str_detect(scale, "^SOCS") & item_number %in% socs_tolerating_discomfort_items ~ "Tolerating_Discomfort",
      str_detect(scale, "^SOCS") & item_number %in% socs_alleviate_suffering_items ~ "Alleviate_Suffering",
      TRUE ~ subscale
    )
  )
```

```{r}
write_feather(tidy_german_df, "../results/tidy_responses.feather")
```

# Reverse Coding

```{r}
reverse_code_items <- c(
  "FFMQ_3", "FFMQ_5", "FFMQ_7", "FFMQ_8", "FFMQ_10",
  "FFMQ_15", "FFMQ_19", "FFMQ_23", "PSS_4", "PSS_5",
  "PSS_7", "PSS_8", "ECR_3", "ECR_4", "ECR_9", "ECR_12"
)

rc_tidy_german_df <- tidy_german_df %>% 
  mutate(value = case_when(
    name %in% reverse_code_items & scale == "FFMQ" ~ 6 - value,
    name %in% reverse_code_items & scale == "PSS" ~ 4 - value,
    name %in% reverse_code_items & scale == "ECR" ~ 8 - value,
    TRUE ~ value
  ))

write_feather(rc_tidy_german_df, "../results/rc_tidy_responses.feather")
  
```

# Complete Cases

```{r}
complete_cases <- rc_tidy_german_df %>% 
  group_by(ResponseId, scale) %>% 
  summarise(complete = !any(is.na(value))) %>% 
  filter(complete == TRUE)
  
complete_tidy_german_df <- rc_tidy_german_df %>% 
  semi_join(complete_cases, join_by(ResponseId, scale))

write_feather(complete_tidy_german_df, "../results/complete_tidy_responses.feather")

```

# Scale Correlations

```{r}
scale_order_vector <- items_vector <- c(
  "CEAS_SC", "CEAS_TO", "CEAS_FROM", "SOCS_S", "SOCS_O", "SCS_Positive",
  "SCS_Negative", "ECR_Anxiety", "ECR_Avoidance", "FFMQ", "IRI", "PHQ",
  "PSS", "WEMWBS"
)

wide_scale_sum_df <- complete_tidy_german_df %>% 
  group_by(ResponseId, scale) %>% 
  summarise(scale_score = sum(value)) %>% 
  pivot_wider(id_cols = ResponseId, names_from = "scale", values_from = "scale_score") %>% 
  relocate(any_of(scale_order_vector)) %>% 
  ungroup()
```

```{r}
scale_correlations <- wide_scale_sum_df %>% 
  select(-ResponseId) %>% 
  corr.test(adjust = "BH")
```

```{r}
scale_stars <- scale_correlations$stars %>% 
  as_tibble() %>% 
  mutate(Scale = colnames(scale_correlations$stars), .before=everything())
```

```{r}
write_csv(scale_stars, "../results/scale_correlation.csv")
```

# Subscale Correlations

```{r}
wide_subscale_sum_df <- complete_tidy_german_df %>% 
  group_by(ResponseId, scale, subscale) %>% 
  summarise(subscale_score = sum(value)) %>% 
  mutate(subscale_name = str_c(scale, str_replace_na(subscale, ""), sep="_")) %>% 
  mutate(subscale_name = str_replace(subscale_name, "_$", "")) %>% 
  pivot_wider(id_cols = ResponseId, names_from = "subscale_name", values_from = "subscale_score") %>%     mutate(
    CEAS_FROM = sum(across(starts_with("CEAS_FROM"))),
    CEAS_SC = sum(across(starts_with("CEAS_SC"))),
    CEAS_TO = sum(across(starts_with("CEAS_TO"))),
    SOCS_O = sum(across(starts_with("SOCS_O"))),
    SOCS_S = sum(across(starts_with("SOCS_S")))
  ) %>%
  relocate(
    ResponseId,
    CEAS_SC,
    starts_with("CEAS_SC"), 
    CEAS_TO,
    starts_with("CEAS_TO"),
    CEAS_FROM,
    starts_with("CEAS_FROM"),
    SOCS_S,
    starts_with("SOCS_S"),
    SOCS_O,
    starts_with("SOCS_O"),
    starts_with("SCS")
  ) %>% 
  ungroup()
  
```

```{r}
subscale_correlations <- wide_subscale_sum_df %>% 
  select(-ResponseId) %>% 
  corr.test(adjust = "BH")
```

```{r}
subscale_stars <- subscale_correlations$stars %>% 
  as_tibble() %>% 
  mutate(Scale = colnames(subscale_correlations$stars), .before=everything())
```

```{r}
write_csv(scale_stars, "../results/subscale_correlation.csv")
```

# Descriptive Statistics and Internal Consistency

```{r}
descriptives_df <- wide_subscale_sum_df %>% 
  pivot_longer(-ResponseId, values_drop_na=TRUE) %>% 
  group_by(name) %>% 
  summarise(
    scale_mean = round(mean(value), 2),
    scale_sd = round(sd(value, 2)),
    scale_min = min(value),
    scale_max = max(value)
    )
```

```{r}
write_csv(descriptives_df, "../results/descriptive-statistics.csv")
```

# Alphas

```{r}
scale_split_dfs <- complete_tidy_german_df %>% 
  group_by(scale) %>%
  group_split()
```

```{r}
get_alpha <- function(df, column_name) {
  alpha_df <- df %>%
    pivot_wider(values_from = value, id_cols = ResponseId, names_from = name) %>% 
    drop_na() %>% 
    select(-ResponseId) %>% 
    alpha() 
  
  data_frame(
    scale = df[[column_name]][[1]],
    alpha = round(alpha_df[["total"]][["raw_alpha"]], 2)
  )
}

```

```{r}
scale_alpha_df <- map_df(scale_split_dfs, ~get_alpha(., "scale"))
```

```{r}
write_csv(scale_alpha_df, "../results/scale-alphas.csv")
```

## Subscale Alphas

```{r}
subscale_split_dfs <- complete_tidy_german_df %>% 
  filter(!is.na(subscale)) %>% 
  mutate(scale_subscale = str_c(scale, subscale, sep="_")) %>% 
  group_by(scale_subscale) %>% 
  group_split()
```

```{r}
subscale_alpha_df <- map_df(subscale_split_dfs, ~get_alpha(., "scale_subscale"))
```

```{r}
write_csv(subscale_alpha_df, "../results/subscale-alphas.csv")
```

```{r}
scale_alpha_df %>% 
  bind_rows(subscale_alpha_df)
```

```{r}
readRDS("../results/mi-df.sav")
```
