---
title: ""
format: docx
editor: visual
execute: 
  echo: false
params:
  data: "../results/ceas_to_tidy.feather"
  model: "../models/ceas_to_hierarchical.json"
---

```{r, echo=FALSE, message=FALSE}
library(tidyverse)
library(jsonlite)
library(feather)
library(knitr)
library(flextable)
source("../R/funcs.R")
```

```{r}
model_info <- read_json(params$model)
model_info
```

# `r model_info$scale_name` `r model_info$model_name`

```{r}
tidy_df <- read_feather(params$data)
```

```{r}
scale_name <- model_info$scale_name
model_name <- model_info$model_name
model_string <- model_info$model_string
```

```{r}
df <- tidy_df %>% 
  pivot_wider(values_from = response, id_cols = ResponseId, names_from = item)
```

## Correlation

```{r, correlation, fig.width=16, fig.height=9}
if (max(tidy_df$response) > 8) {
  cor_matrix <- cor(df %>% select(-ResponseId), method="spearman")
  cor_method <- "Spearman"
} else {
  cor_matrix <- polychoric(df %>% select(-ResponseId))$rho
  cor_method <- "Polychoric"
}

format_correlation(cor_matrix, str_c(scale_name, cor_method, sep = " "))
```

## Eigenvalues (none should negative)

```{r}
eigen(cor_matrix)$values
```

## Interpret fit

```{r}
cfa_fit <- fit_cfa(model_string, df)
```

```{r}
if (cfa_fit@Fit@converged) {
  interpret_fit(cfa_fit)
} else {
  print("No convergence.")
}

```

```{r}
if (cfa_fit@Fit@converged) {
  lav_fit_measures(cfa_fit, df, scale_name, model_name)
} else {
  print("No convergence.")
}
```

## SEM Paths

```{r}
format_sem_paths(cfa_fit, scale_name, model_name)
```

## Model Parameters

```{r}
format_huxtable(format_cfa_parameters(cfa_fit))
```

## Omegas

```{r}
omegas <- get_omegas(cfa_fit)
omegas
```

## Session Information

```{r}
sessionInfo()
```
